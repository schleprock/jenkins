<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>you must set the NodeLabel parameter in the trigger parameterized build on other&#xd;
projects to the server you want to update. it doesn&apos;t matter what the name of&#xd;
the parameter is, just ensure that the Node value is the name of the jenkins node</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>60</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>REPO_TOP_DIR</name>
          <description>specify the top directory of the repo&apos;s. for example debug to update
/ansysdev/git/debug/...</description>
          <defaultValue>needOne</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <customWorkspace>d:\ansysdev\git\${REPO_TOP_DIR}</customWorkspace>
  <builders>
    <hudson.tasks.Shell>
      <command>#!d:\cygwin\bin\bash

if [ &quot;${REPO_TOP_DIR}&quot; == &quot;needOne&quot; ]; then
  echo &quot;ERROR: need a mode (release/debug) value, current is ${REPO_TOP_DIR}&quot;
  exit 1
fi

echo &quot;updating view for ${REPO_TOP_DIR} build&quot;
echo &quot;pwd: &quot;
pwd
whoami
echo &quot;Killing any zombie git exe&apos;s&quot;
if ! ~/scripts/killProcessByNameRegex -k &quot;^git-.*exe|^git\.exe|^ssh\.exe&quot;; then
  echo &quot;Warning: killProcessByNameRegex failed...&quot;
fi
echo &quot;Killing zombie rm processes&quot;
if ! ~/scripts/killProcessByNameRegex -k &quot;^rm\.exe&quot;; then
  echo &quot;Warning: killProcessByNameRegex failed...&quot;
fi
if ! ~/gitScripts/gitClean.pl; then
  echo &quot;git clean FAILED&quot;
  exit 1
else 
  echo &quot;git clean completed successfully&quot;
fi
if [ -d 3rdparty ]; then
    echo &quot;Removing 3rdparty...&quot;
    rm -r 3rdparty
    echo &quot;Removed 3rdparty...&quot;
fi
if ! ~/gitScripts/gitUpdate --noxmessage; then
  echo &quot;git update FAILED&quot;
  ~/scripts/killProcessByNameRegex -k &quot;^git-.*exe|^git\.exe|^ssh\.exe&quot;
  ~/scripts/killProcessByNameRegex -k &quot;^rm\.exe&quot;
  exit 1
else
  echo &quot;git update completed successfully&quot;
fi


</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.42">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo></replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.SuccessTrigger>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$REPO_TOP_DIR $DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$REPO_TOP_DIR $DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <postsendScript></postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.16">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>80</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.2"/>
  </buildWrappers>
</project>